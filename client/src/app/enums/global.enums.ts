// =====================
// Game Configuration
// =====================
export enum AttributeType {
    Vitality = 'Vitalit√©',
    Speed = 'Vitesse',
    Attack = 'Attaque',
    Defense = 'D√©fense',
}

export enum GameModeLabel {
    Classic = 'Classique',
    CTF = 'Capture Le Drapeau',
}

export enum GameModeType {
    Classic = './assets/gamemodes/classic.png',
    CTF = './assets/gamemodes/CTF.png',
    Default = './assets/gamemodes/classic.png',
}

export enum GameSizeNumber {
    SmallSize = '10',
    MediumSize = '15',
    LargeSize = '20',
    Default = '',
}

export enum ItemCount {
    SmallItemCount = 2,
    MediumItemCount = 4,
    LargeItemCount = 6,
}

// =====================
// Access & Security
// =====================
export enum AccessCodeGenerator {
    Minimum = 1000,
    Maximum = 9000,
}

export enum MouseButton {
    Left = 0,
    Right = 2,
}

// =====================
// UI & Input Events
// =====================
export enum Keys {
    Escape = 'Escape',
    D = 'd',
}

// =====================
// Chat & Communication
// =====================
export enum ChatEvents {
    Validate = 'validate',
    ValidateACK = 'validateWithAck',
    BroadcastAll = 'broadcastAll',
    JoinRoom = 'joinRoom',
    RoomMessage = 'roomMessage',

    WordValidated = 'wordValidated',
    MassMessage = 'massMessage',
    Hello = 'hello',
    Clock = 'clock',
    Error = 'error',
}

// =====================
// Socket Events
// =====================
export enum SocketEvent {
    GameAbandoned = 'game-abandoned',
    GameDeleted = 'gameDeleted',
    GameEnded = 'gameEnded',
    AdminModeDisabled = 'adminModeDisabled',
    GameStarted = 'gameStarted',
    PlayerMovement = 'playerMovement',
    PlayerUpdate = 'playerUpdate',
    PlayerListUpdate = 'playerListUpdate',
    DoorClicked = 'doorClicked',
    WallClicked = 'wallClicked',
    GridUpdate = 'gridUpdate',
    AdminModeChangedServerSide = 'adminModeChangedServerSide',
    ItemChoice = 'itemChoice',
    ItemDropped = 'itemDropped',
    ItemDrop = 'itemDrop',
    PlayerClientUpdate = 'playerClientUpdate',
    JoinRoom = 'joinRoom',
    UnavailableOption = 'updateUnavailableOptions',
    RequestUnavailableOptions = 'requestUnavailableOptions',
    SelectAvatar = 'selectAvatar',
    DeselectAvatar = 'deselectAvatar',
    ManualDisconnect = 'manualDisconnect',
    UnlockLobby = 'unlockLobby',
    LockLobby = 'lockLobby',
    KickPlayer = 'kickPlayer',
    KickVirtualPlayer = 'kickVirtualPlayer',
    CreateGame = 'createGame',
    CreateVirtualPlayer = 'createVirtualPlayer',
    CombatStarted = 'combatStarted',
    AttackResult = 'attackResult',
    CombatTurnStarted = 'combatTurnStarted',
    CombatTimerUpdate = 'combatTimerUpdate',
    EscapeAttempt = 'escapeAttempt',
    CombatEnded = 'combatEnded',
    CombatEndedLog = 'combatEndedLog',
    CombatStartedLog = 'combatStartedLog',
    DecrementItem = 'decrement.item',
    EndTurn = 'endTurn',
    DoorUpdate = 'doorUpdate',
    WallUpdate = 'wallUpdate',
    StartCombat = 'startCombat',
    TeleportPlayer = 'teleportPlayer',
    PerformAttack = 'performAttack',
    Evade = 'evade',
    AdminModeUpdate = 'adminModeUpdate',
    JoinLobby = 'joinLobby',
    JoinedLobby = 'joinedLobby',
    LobbyUpdate = 'lobbyUpdate',
    Kicked = 'kicked',
    LobbyLocked = 'lobbyLocked',
    LobbyUnlocked = 'lobbyUnlocked',
    LobbyDeleted = 'lobbyDeleted',
    AlertGameStarted = 'alertGameStarted',
    LeftLobby = 'leftLobby',
    UpdatePlayers = 'updatePlayers',
    AdminLeft = 'adminLeft',
    CreateLobby = 'createLobby',
    LobbyCreated = 'lobbyCreated',
    Error = 'error',
    JoinError = 'joinError',
    GetLobbyPlayers = 'getLobbyPlayers',
    GetLobby = 'getLobby',
    UpdateLobby = 'updateLobby',
    PlayerMovementUpdate = 'playerMovementUpdate',
    TurnStarted = 'turnStarted',
    TimerUpdate = 'timerUpdate',
    TransitionStarted = 'transitionStarted',
    GameTurnResumed = 'gameTurnResumed',
}

// =====================
// Gameplay Events
// =====================
export enum AdminEvent {
    AdminModeChangedServerSide = 'adminModeChangedServerSide',
}

export enum CombatEvent {
    GameCombatStarted = 'gameCombatStarted',
    AttackResult = 'attackResult',
    GameCombatTurnStarted = 'gameCombatTurnStarted',
    GameCombatTimerUpdate = 'gameCombatTimerUpdate',
    CombatEnded = 'combatEnded',
    NoMoreEscapesLeft = 'noMoreEscapesLeft',
}

export enum GameLifecycleEvent {
    AbandonGame = 'abandonGame',
    GameDeleted = 'gameDeleted',
    GameEnded = 'gameEnded',
    TransitionStarted = 'transitionStarted',
}

export enum GridEvent {
    DoorClickedUpdate = 'doorClickedUpdate',
    GridUpdate = 'gridUpdate',
}

export enum NotificationEvent {
    AlertGameStarted = 'alertGameStarted',
}

export enum PlayerEvent {
    PlayerMovement = 'playerMovement',
    PlayerUpdate = 'playerUpdate',
    PlayerListUpdate = 'playerListUpdate',
}

export enum TurnEvent {
    TurnStarted = 'turnStarted',
    TimerUpdate = 'timerUpdate',
}

// =====================
// üîî Messages & Logs
// =====================
export enum ClientNotifierMessage {
    CombatWon = 'a gagn√© le combat !',
    CombatEvaded = 'a evad√© le combat !',
    RedirectHome = "Trop de joueurs ont abandonn√© la partie, vous allez √™tre redirig√© vers la page d'accueil",
    SoloWin = 'a remport√© la partie ! Redirection vers la page de fin sous peu',
    TeamWin = 'ont remport√© la partie ! Redirection vers la page de fin sous peu',
    DeactivatedDebug = "Mode debug 'd√©sactiv√©'",
    PlayerTurnStart = "C'est √†",
    PlayerTurnEnd = 'de jouer',
    TurnStartingStart = 'Le tour √†',
    TurnStartingMiddle = 'commence dans',
    TurnStartingEnd = 'secondes',
}

export enum ErrorMessages {
    MissingCharacterDetails = 'Veuillez vous assurer d‚Äôavoir attribu√© des bonus et des d√©s, et d‚Äôavoir saisi un nom et un avatar.',
    InvalidGameSize = 'Taille de jeu invalide s√©lectionn√©e !',
    UnavailableGameMode = 'Le mode de jeu CTF n‚Äôest actuellement pas disponible !',
    MissingGameDetails = 'Veuillez s√©lectionner √† la fois la taille et le type de jeu !',
    InvalidGameMode = 'Mode de jeu invalide s√©lectionn√© !',
    UnavailableGame = "Le jeu n'est plus disponible.",
    DeletionFailed = '√âchec de la suppression',
    ConfirmDeletion = '√ätes-vous s√ªr de vouloir supprimer ce jeu ?',
    FailedLoad = '√âchec du chargement des jeux',
    GridNotFound = '‚ùå Aucune grille trouv√©e',
    InvalidDoorPlacement = '‚ùå Une ou plusieurs portes ne sont pas correctement plac√©es',
    InvalidTerrainAmount = '‚ùå La grille doit √™tre au moins 50% de terrain (D√©faut, eau ou glace)',
    InvalidNameSize = '‚ùå Le nom doit √™tre entre 1 et 30 caract√®res et unique',
    InvalidDescriptionSize = '‚ùåLa description ne peut √™tre vide et doit √™tre de moins de 100 caract√®res',
    InvalidFlagPlacement = '‚ùå Le drapeau doit √™tre plac√© sur la grille',
    ItemsNotPlaced = '‚ùå Tous les items doivent √™tre plac√©es',
    InnacessibleTerrain = '‚ùå Aucune tuile de terrain accessible trouv√©e',
    SomeTilesInnacessible = '‚ùå Il y a des tuiles inaccesseibles sur le terrain',
    MustPlaceHouseItems = 'items maisons doivent √™tre plac√©es',
    TooManyItemsPlaced = '‚ùå Trop d‚Äôitems ont √©t√© plac√©s',
    NotEnoughPlayers = '‚ùå Il n‚Äôy a pas assez de joueurs pour commencer la partie',
    LobbyNotLocked = '‚ùå Le lobby n‚Äôest pas verrouill√©',
    LockedRoom = "La salle est verrouill√©e, voulez-vous √™tre redirig√© vers la page d'accueil",
    MaxNameLength = 'La longueur maximale de 20 caract√®res est atteinte',
    MaxPlayersReached = '‚ùå Le nombre maximal de joueurs est atteint pour cette partie',
    NoAccessCode = 'Failed to create lobby: No access code received',
    LobbyCreationFailed = 'Lobby creation failed:',
    JoinFailed = 'Join failed:',
    InvalidAccessCode = 'Invalid access code',
    ValidationFailed = 'Access code validation failed',
}

export enum LogBookEntry {
    CombatStartedExclamation = 'Combat commenc√©!',
    CombatStarted = 'Combat commenc√©',
    AttackResultSuccess = 'r√©ussie',
    AttackResultFail = '√©chou√©e',
    EvadeResultSuccess = 'r√©ussi',
    EvadeResultFail = 'rat√©',
    Attack = 'Attaque',
    AttackStart = '(Attaque:',
    Defense = ', D√©fense:',
    EvadeAttempt = "Tentative d'√©vasion",
    CombatWon = 'Combat gagn√© par',
    CombatEvaded = 'Combat √©vad√© par',
    PlayerAbandoned = 'Un joueur a abandonne la partie',
    ItemDropped = 'a d√©pos√© un item!',
    FlagPickedUp = 'a pris le drapeau!',
    ItemPickedUp = 'a pris un item!',
    GameEnded = 'Fin de la partie',
    DoorClosed = 'Un joueur a ferm√© une porte',
    DoorOpened = 'Un joueur a ouvert une porte',
    WallAction = 'Un joueur a effectue une action sur un mur!',
    DebugMode = 'Mode debug',
    Activated = 'activ√©',
    Deactivated = 'd√©sactiv√©',
}

export enum SnackBarMessage {
    LobbyLocked = 'Le lobby est verrouill√© et ne peut pas √™tre rejoint.',
    Error = "Une erreur s'est produite.",
    NonExistent = "La partie que vous souhaitez rejoindre n'existe pas!",
    GetImpossible = 'Impossible de r√©cup√©rer la partie.',
    LobbyFull = 'Le lobby est plein, impossible de le d√©verrouiller.',
    FriendlyFire = "TRAITRE!!! C'EST MOI TON AMI",
    ActivatedMode = 'Mode action activ√©',
    DeactivatedMode = 'Mode action d√©sactiv√©',
    LobbyExpulsion = 'Vous avez √©t√© expuls√© du lobby.',
}

export enum Tab {
    Chat = 'chat',
    Log = 'log',
}

export enum AttackMessages {
    Success = 'r√©ussie',
    Failure = '√©chou√©e',
    AttackDice = "D√© d'Attaque",
    DefenseDice = 'D√© de D√©fense',
    AttackResult = "R√©sultat d'Attaque",
}
